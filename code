=============================================================================================
	Check email validaion
=============================================================================================
  
  public static boolean isValidEmail(CharSequence target) {
    return (!TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches());
  }
  
  OR
  
  private boolean isValidEmailId(String email){

    return Pattern.compile("^(([\\w-]+\\.)+[\\w-]+|([a-zA-Z]{1}|[\\w-]{2,}))@"
              + "((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
              + "[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\."
              + "([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
              + "[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|"
              + "([a-zA-Z]+[\\w-]+\\.)+[a-zA-Z]{2,4})$").matcher(email).matches();
     }
  

=============================================================================================
	Validate Mobile No starting Digit
=============================================================================================

	private boolean validateNumber(String num) {
	    if(num.length = 10 && !num[0].equals("0")){
		return true;
	    } else {
		return false;
	    }
	}

  OR

	editTextMobileNo.addTextChangedListener(new TextWatcher() {
            @Override
            public void onTextChanged(CharSequence s, int start, int before,
                                      int count) {
                String enteredString = s.toString();
                if (enteredString.startsWith("0")) {
                    Toast.makeText(RegisterActivity.this,
                            "Mobile no should not start with zero",
                            Toast.LENGTH_SHORT).show();
                    if (enteredString.length() > 0) {
                        editTextMobileNo.setText(enteredString.substring(1));
                    } else {
                        editTextMobileNo.setText("");
                    }
                }
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                                          int after) {
            }

            @Override
            public void afterTextChanged(Editable s) {
            }
        });


=============================================================================================	
	Call Fragment method from Activity
=============================================================================================
	((EditGalleryImageActivity)  getActivity()).hideVisibility();


	or 

	Activity testActivity = getActivity();

	if(testActivity instanceof ParentActivity) {
	    ((ParentActivity) testActivity).someMethodInParentActivity();
	}


=============================================================================================	
	Long click listner on textview
=============================================================================================

	Select your text manually and then perform a long click:

	textView.post(new Runnable() {
	    @Override
	    public void run() {
		Selection.selectAll((Spannable) tv.getText());
		tv.performLongClick();
	    }
	});

	The problem is that the built-in text selection CAB is private and uses multiple private classes. You'd need 
	to copy a lot of code or access a bunch of methods with reflection to use it.

	You could make your own CAB menu but you'd also need the controller handles which is again a lot of code.

	A simple solution would be to live with what you have and use my above suggested method. If you want to avoid
	calling your long click listener you can remove it while calling the cab:

	Selection.selectAll((Spannable) tv.getText());
	tv.setOnLongClickListener(null);
	tv.performLongClick();
	tv.setOnLongClickListener(mLongClickListener);


============================================================================================================
	Firebase invite activity
============================================================================================================

     Intent shareIntent1 = new Intent(Intent.ACTION_SEND);
     shareIntent1.setType("text/plain");
     shareIntent1.putExtra(Intent.EXTRA_TEXT, "Download Enthuons Chat app - http://www.androidlearnings.com/enthuons_chat_1.0.0.apk");
     startActivity(Intent.createChooser(shareIntent1, "Share App Link"));
     Intent intent = new AppInviteInvitation.IntentBuilder(getString(R.string.invitation_title))
            .setMessage(getString(R.string.invitation_message))
            .setDeepLink(Uri.parse(getString(R.string.invitation_deep_link)))
            .setEmailHtmlContent("<html><body>" +
                         "<h3>Enthuons Chatting App</h3>" +
                         "<a href=\"%%APPINVITE_LINK_PLACEHOLDER%%\">Install Now!</a>" +
                         //"<a href=\"http://androidlearnings.com/enthuons_chat_1.0.0.apk\">Install Now!</a>" +
                         "<body></html>")
                                .setEmailSubject(getString(R.string.invitation_title))
                                .build();
     startActivityForResult(intent, REQUEST_INVITE);


===============================================================================================================
	send data from current activity and get that data in previous activity
===============================================================================================================

	Intent intent = new Intent();
	intent.putExtra("editTextValue", "value_here");
	setResult(RESULT_OK, intent);        
	finish();

	And in Activity1, receive data with onActivityResult:

	public void onActivityResult(int requestCode, int resultCode, Intent data) {
	    super.onActivityResult(requestCode, resultCode, data);
	    if (requestCode == 1) {
		 if(resultCode == RESULT_OK) {
		     String strEditText = data.getStringExtra("editTextValue");
		 }     
	    }
	} 

===============================================================================================================
	hide soft keyboard when touch outside edittext layout
===============================================================================================================

	1. First set folowing 2 xml attributes in container layout
		android:clickable="true"
            	android:focusableInTouchMode="true"
	2.create method to hide soft keyboard
		
		public void hideSoftKeyboard(View view) {
		InputMethodManager inputMethodManager =(InputMethodManager)getSystemService(Activity.INPUT_METHOD_SERVICE);
		inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
	    }
	3. set OnFocusChangeListner on edittext
		et_UserName.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            	@Override
            	public void onFocusChange(View view, boolean hasFocus) {
                if (!hasFocus) {
                    hideSoftKeyboard(view);
                }
            }
        });

===============================================================================================================
	Make button with round corner and touch effect
===============================================================================================================	

	1. Create new Android Resource File in drawable folder with following code

	button_backgroun.xml
	<?xml version="1.0" encoding="utf-8"?>
	<selector xmlns:android="http://schemas.android.com/apk/res/android">

	    <item android:state_pressed="false" >
		<shape xmlns:android="http://schemas.android.com/apk/res/android"
		    android:dither="true"
		    android:shape="rectangle">
		    <corners
		        android:radius="20dp" />
		    <solid android:color="@color/colorPrimary" />
		    <size
		        android:width="0dp"
		        android:height="0dp" />
		</shape>
	    </item>

	    <item android:state_pressed="true" >
		<shape xmlns:android="http://schemas.android.com/apk/res/android"
		    android:dither="true"
		    android:shape="rectangle">
		    <corners
		        android:radius="20dp" />
		    <solid android:color="@color/colorPrimaryDark" />
		    <size
		        android:width="0dp"
		        android:height="0dp" />
		</shape>
	    </item>

	</selector>
	
	2. set button attributes in xml as follows

	   <Button
                android:id="@+id/btn_submit"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/button_background"
                android:paddingLeft="10dp"
                android:paddingRight="10dp"
                android:text="SAVE"
                android:textAllCaps="true"
                android:textColor="#FFF"
                android:textSize="15dp"/>


===============================================================================================================
	Include any layout file in xml layout
===============================================================================================================	

	<include layout="@layout/header"/>
	where header is xml layout file in layout folder


===============================================================================================================
	Get/ Compare api version code 
===============================================================================================================	

	if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.LOLLIPOP){
		    //current android version is greater than LOLLIPOP 
	}else{
		    //current android version is less than LOLLIPOP
	}

===============================================================================================================
	Create directory and Directory inside directory
===============================================================================================================	

	 File directory = new File(Environment.getExternalStorageDirectory() + "/EnthuonsChat");
            if (!directory.exists()) {
                directory.mkdir();
            }
            File insideFolder = new File (directory,"Images");
            if (!insideFolder.exists()) {
                insideFolder.mkdir();
            }


===============================================================================================================
	Create String with current time and date
===============================================================================================================	

	final String image_name = DateFormat.format("yyyy-MM-dd_hhmmss", new Date()).toString()+ "_camera.jpg";

	Output string = "2018-06-01_113748_camera.jpg"



===============================================================================================================
	Check if URL is valid URL
===============================================================================================================	
	
	Patterns.WEB_URL.matcher(potentialUrl).matches()
	It will return True if URL is valid and false if URL is invalid.


===============================================================================================================
	Convert JSON to getter and setters model class
===============================================================================================================	
	
	visit folowing link
	http://www.jsonschema2pojo.org/


===============================================================================================================
	Replacing manifest attributes tool:replace
===============================================================================================================	

	Uses tool:replace"" attribute in app manifest as follows
	
	 <application
		android:name=".PhotoApp"
		android:resizeableActivity="false"
		android:largeHeap="true"
		android:icon="@mipmap/ic_launcher_foreground"
		android:label="@string/app_name"
		android:roundIcon="@mipmap/ic_launcher_round"
		android:theme="@style/AppTheme"
		tools:replace="android:icon, android:label, android:theme, android:name,android:allowBackup"
		android:allowBackup="false">

===============================================================================================================
	Save ImageView image as image file
===============================================================================================================	
	
	myImageView.setDrawingCacheEnabled(true);
        myImageView.buildDrawingCache(true);

        //create the bitmaps
        Bitmap zoomedBitmap = Bitmap.createScaledBitmap(myImageView.getDrawingCache(true), 
							myImageView.getWidth(), myImageView.getHeight(), true);

        myImageView.setDrawingCacheEnabled(false);

        File myFile = new File(Environment.getExternalStorageDirectory()
                + File.separator + "DCIM"+File.separator + ""
                + System.currentTimeMillis() + ".JPG");
        FileOutputStream fileOutputStream = null;
        try {
                fileOutputStream = new FileOutputStream(myFile);
                zoomedBitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);
                fileOutputStream.close();

        } catch (FileNotFoundException e) {

            Toast.makeText(activity, e.toString(), Toast.LENGTH_SHORT).show();
            e.printStackTrace();

        } catch (IOException e) {
            Toast.makeText(activity, e.toString(), Toast.LENGTH_SHORT).show();
            e.printStackTrace();
        }


===============================================================================================================
	Launch file picker with MimeType
===============================================================================================================	

	String MP3Type = null;
        String MP3extension = "mp3";
      
        MP3Type = android.webkit.MimeTypeMap.getSingleton().getMimeTypeFromExtension(MP3extension);
 	String[] mimeTypes ={"application/pdf",MP3Type};

	
        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        intent.addCategory(Intent.CATEGORY_OPENABLE);

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            intent.setType(mimeTypes.length == 1 ? mimeTypes[0] : "*/*");
            if (mimeTypes.length > 0) {
                intent.putExtra(Intent.EXTRA_MIME_TYPES, mimeTypes);
            }
        } else {
            String mimeTypesStr = "";
            for (String mimeType : mimeTypes) {
                mimeTypesStr += mimeType + "|";
            }
            intent.setType(mimeTypesStr.substring(0,mimeTypesStr.length() - 1));
        }
        startActivityForResult(Intent.createChooser(intent,"ChooseFile"), FILE_PICKER_REQUEST_CODE);

     
===============================================================================================================
	App count badge (notification count)
===============================================================================================================	

	https://github.com/leolin310148/ShortcutBadger


===============================================================================================================
	Apply Show/ hide password icon in edittext
===============================================================================================================	

	compile 'com.github.scottyab:showhidepasswordedittext:0.8'





            <TextView
                android:id="@+id/tv_status"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:singleLine="true"
                android:layout_below="@+id/tv_username"
                android:ellipsize="marquee"
                android:marqueeRepeatLimit="marquee_forever"
                android:scrollHorizontally="true"
                android:textColor="@color/colorWhite"
                android:text="You are the only who can deserve the life you create"/>

===============================================================================================================
	Setting onClickListner to row in onBindViewHolder of RecyclerView
===============================================================================================================	



	((View) ((ItemAllUsersViewHolder) holder).txtName.getParent().getParent().getParent())
                    .setOnClickListener(new View.OnClickListener()  {
                        @Override
                        public void onClick(final View view) {
				
			}

================================================================================================================
	Library to make scrollview item zoomed when get focused
================================================================================================================

	https://github.com/yarolegovich/DiscreteScrollView

	https://github.com/alibaba/UltraViewPager



================================================================================================================
	Change ActionBar 3 Dots color or Icon
================================================================================================================

	1. Create Theme in Styles.xml
	
		<style name="CustomTheme" parent="Theme.AppCompat.Light">
			<item name="colorPrimary">@color/colorPrimary</item>
			<item name="colorPrimaryDark">@color/colorPrimaryDark</item>
			<item name="colorAccent">@color/colorAccent</item>
			<item name="contentInsetStart">0dp</item>
			<item name="contentInsetEnd">0dp</item>
			<item name="android:actionOverflowButtonStyle">@style/DotsLightTheme</item>
		
	    	</style>

	   	<style name="DotsLightTheme" parent="@style/Widget.AppCompat.ActionButton.Overflow" >
			<item name="android:tint">@color/colorWhite</item>
		</style>

		<style name="OverFlow" parent="@android:style/Widget.Holo.ActionButton.Overflow">
			<item name="android:src">@drawable/ic_btn_more</item>
		</style>

	2. Set above theme to activity in Manifest file
	
		 <activity
		    android:name="com.enthuons.fchat.ui.ChatActivity"
		    android:parentActivityName="com.enthuons.fchat.MainActivity"
		    android:screenOrientation="portrait"
		    android:theme="@style/CustomTheme"
		    android:windowSoftInputMode="stateHidden" >

		<meta-data
		    android:name="android.support.PARENT_ACTIVITY"
		    android:value="com.enthuons.fchat.MainActivity" />

		</activity>


=================================================================================================================
	Add onComplete and onFailure listerner to firebase reference (task)
=================================================================================================================

        FirebaseDatabase.getInstance().getReference().child("")
        	.child("").child("").removeValue()
                .addOnCompleteListener(new OnCompleteListener<Void>() {
                       		@Override
                                    public void onComplete(@NonNull Task<Void> task) {
                                        // your success code here
                                    }
                                })
                                .addOnFailureListener(new OnFailureListener() {
                                    @Override
                                    public void onFailure(@NonNull Exception e) {
                                       // your failure code here
                                    }
                                });


=================================================================================================================
	Check if Activity is in Multi-Window mode
=================================================================================================================

	if (((Activity)getContext()).isInMultiWindowMode())
        {
                Toast.makeText(context, "I am in Split-Screen mode", Toast.LENGTH_SHORT).show();
        }



==================================================================================================================
	Check multiple Permission in API level 23 and greater
==================================================================================================================

	tep 1:

	 String[] permissions = new String[]{
		Manifest.permission.INTERNET,
		Manifest.permission.READ_PHONE_STATE,
		Manifest.permission.READ_EXTERNAL_STORAGE,
		Manifest.permission.WRITE_EXTERNAL_STORAGE,
		Manifest.permission.VIBRATE,
		Manifest.permission.RECORD_AUDIO,
	};
	Step 2:

	 private boolean checkPermissions() {
	    int result;
	    List<String> listPermissionsNeeded = new ArrayList<>();
	    for (String p : permissions) {
		result = ContextCompat.checkSelfPermission(this, p);
		if (result != PackageManager.PERMISSION_GRANTED) {
		    listPermissionsNeeded.add(p);
		}
	    }
	    if (!listPermissionsNeeded.isEmpty()) {
		ActivityCompat.requestPermissions(this, listPermissionsNeeded.toArray(new String[listPermissionsNeeded.size()]), 100);
		return false;
	    }
	    return true;
	}
	Step 3:

	 @Override
	public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
	    if (requestCode == 100) {
		if (grantResults.length > 0
		        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
		    // do something
		}
		return;
	    }
	}
	Step 4: in onCreate of Activity call function checkPermissions();


==================================================================================================================
	Add shadow below toolbar
==================================================================================================================

    <android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        app:popupTheme="@style/Theme.AppCompat.Light.DarkActionBar"
        android:theme="@style/Toolbar"/>

    <View
        android:id="@+id/toolbar_shadow"
        android:layout_width="match_parent"
        android:layout_height="@dimen/toolbar_shadow_height"
        android:layout_marginBottom="@dimen/toolbar_shadow_adjust"
        android:background="@drawable/toolbar_shadow" />

	**** Add thix code in toolbar_shadow.xml ****

	<?xml version="1.0" encoding="utf-8"?>
	<shape xmlns:android="http://schemas.android.com/apk/res/android">
	    <gradient
		android:startColor="#00000000"
		android:endColor="#40000000"
		android:angle="90.0"
		android:centerColor="#05000000" />
	</shape>


==================================================================================================================
	How to add github library as module(insteat of dependency) in exixting project
==================================================================================================================

	Reference :- https://github.com/MagicMicky/FreemiumLibrary/wiki/Import-the-library-in-Android-Studio

	1. File ->New-> Import module -> selection your library_project
	(Then include 'library_project' will be add in settings.gradle file.) 

	2. File-> Project Structure -> app-> Select Dependencies Tab -> select library_project, If library_project not displaying then, Click 		on + button then select your library_project.

	3. Clean and build your project
	(After that Check,add 

	dependencies {
	    compile fileTree(dir: 'libs', include: ['*.jar'])
	    compile project(':library_project')
	}
	lines will be added in your project specific build.gradle file which is located on app folder or directory(hint: Not in main 			build.gradle file where classpath is defined) )
	4. if those lines will not present then manually add them, then Clean and rebuild your project again.

	5. Check that a folder will be created named by library_project in your app folder.


	6.If any icon or task merging error is created then, in AndroidManifest file add <application tools:replace="icon, label,theme"> 


==================================================================================================================
	Android Tap on Target Library
==================================================================================================================

	https://github.com/sjwall/MaterialTapTargetPrompt




==================================================================================================================
	Instagram like image zooming library
==================================================================================================================

	https://github.com/imablanco/Zoomy




==================================================================================================================
	Read all phonebook conacts
==================================================================================================================

	Cursor phones = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null,null,null, null);
	while (phones.moveToNext())
	{
	  String name=phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));
	  String phoneNumber = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));

	}
	phones.close();


==================================================================================================================
	Read all phonebook conacts (without duplicate contacts)
==================================================================================================================

	String[] projection    = new String[] {     ContactsContract.RawContacts._ID, 
                                                    ContactsContract.RawContacts.DISPLAY_NAME_PRIMARY,  
                                                    ContactsContract.CommonDataKinds.Phone.CONTACT_ID,      
                                                    ContactsContract.CommonDataKinds.Phone.NUMBER
        };
                
        Cursor cursor = getContentResolver().query(  ContactsContract.CommonDataKinds.Phone.CONTENT_URI, projection,   
                                                    ContactsContract.RawContacts.ACCOUNT_TYPE + "= ?",
                                                    new String[] { "com.whatsapp" }, 
                                                    ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME+" ASC");
        
        int indexName = cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME);
        int indexNumber = cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER);
        int indexUid=cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.CONTACT_ID);

        if(cursor != null   && cursor.moveToFirst()){


             while (cursor.moveToNext()) {

                 String name   = cursor.getString(indexName);
                 String number = cursor.getString(indexNumber);
                 String uid=cursor.getString(indexUid);

                 ContactModel usersModel = new ContactModel();
                 usersModel.setContactName(name);
                 usersModel.setContactNo(number);
                 wpContacts.add(usersModel);
             }

        }
        cursor.close();
        
       wpContacts= removeDuplicates(wpContacts);


	**** Here is removeDuplicates() function ****

	public List<ContactModel> removeDuplicates(List<ContactModel> list) {
        Set set = new TreeSet(new Comparator() {

            @Override
            public int compare(Object o1, Object o2) {
                if (((ContactModel) o1).getContactName().equalsIgnoreCase(((ContactModel) o2).getContactName())
                    return 0;
                }
                return 1;
            }
        });
        set.addAll(list);
        final List newList = new ArrayList(set);
        return newList;
    }


==================================================================================================================
	Sending image/ multiple images via Intent Chooser
==================================================================================================================

	1. Sending single image:
		Intent shareIntent = new Intent();
		shareIntent.setAction(Intent.ACTION_SEND);
		shareIntent.putExtra(Intent.EXTRA_STREAM, uriToImage);
		shareIntent.setType("image/jpeg");
		startActivity(Intent.createChooser(shareIntent, getResources().getText(R.string.send_to)));

	2. sending multiple images:
		ArrayList<Uri> imageUris = new ArrayList<Uri>();
		imageUris.add(imageUri1); // Add your image URIs here
		imageUris.add(imageUri2);

		Intent shareIntent = new Intent();
		shareIntent.setAction(Intent.ACTION_SEND_MULTIPLE);
		shareIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, imageUris);
		shareIntent.setType("image/*");
		startActivity(Intent.createChooser(shareIntent, "Share images to.."));
		
		
==================================================================================================================
	Share app link via Intent Chooser
==================================================================================================================

		public void shareApp(){
        String playStoreLink = "https://play.google.com/store/apps/details?id=" + getPackageName();
        Intent i=new Intent(android.content.Intent.ACTION_SEND);
        i.setType("text/plain");
        i.putExtra(android.content.Intent.EXTRA_SUBJECT,"Stori Stream");
        i.putExtra(android.content.Intent.EXTRA_TEXT, "Download Stori Stream app "+playStoreLink);
        startActivity(Intent.createChooser(i,"Share via"));
    }


==================================================================================================================
	Android chat design library
==================================================================================================================

	https://github.com/stfalcon-studio/ChatKit



==================================================================================================================
	Firebase Listener to get sub childs data of specific child
==================================================================================================================


	ref.addListenerForSingleValueEvent(new ValueEventListener() {
	    @Override
	    public void onDataChange(DataSnapshot snapshot) {
		for (DataSnapshot child : snapshot.getChildren()) {
		    ...
		}
	    }
	}


==================================================================================================================
	Draw Polyline using array of coordinates
==================================================================================================================

	List<LatLng> coordinates;

	 @Override
	    public void onMapReady(GoogleMap googleMap) {
		mMap = googleMap;

		PolylineOptions polylineOptions = new PolylineOptions().
		        geodesic(true).
		        color(Color.BLUE).
		        width(8);

		for (int i = 0; i < coordinates.size(); i++)
		    polylineOptions.add(coordinates.get(i));

		mMap.addPolyline(polylineOptions);

	LatLng visitStart = coordinates.get(0);
        LatLng visitEnd = coordinates.get(coordinates.size()-1);

	MarkerOptions markerOptions = new MarkerOptions();
        markerOptions.position(visitStart);
        markerOptions.title("Visit Start");
        markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN));
        mMap.addMarker(markerOptions);

        MarkerOptions markerOptions2 = new MarkerOptions();
        markerOptions2.position(visitEnd);
        markerOptions2.title("Visit End");
        markerOptions2.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));
        mMap.addMarker(markerOptions2);

        LatLngBounds bounds = new LatLngBounds.Builder().include(visitStart).include(visitEnd).build();
        Point displaySize = new Point();
        getWindowManager().getDefaultDisplay().getSize(displaySize);
        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(bounds, displaySize.x, 250, 30));


	}





==================================================================================================================
	Get data of child with specific key (orderby) 
==================================================================================================================
	
                ref.child("temp_user").orderByChild("username").equalTo(sMobile).addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        if (dataSnapshot.getValue() == null) {
                            

                        } else {
                           
                        }
                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        waitingDialog.dismiss();
                    }
                });


==================================================================================================================
	Mailchimp account to send email
==================================================================================================================

	https://login.mailchimp.com
	
	vinodpatil.enthuons@gmail.com
	enthuonsmanagerial
	Enthuons@2018


==================================================================================================================
	Check Internet connectivity
==================================================================================================================

	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	
	public boolean isOnline() {
	    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
	    NetworkInfo netInfo = cm.getActiveNetworkInfo();
	    if (netInfo != null && netInfo.isConnectedOrConnecting()) {
		return true;
	    }
	    return false;
	}


==================================================================================================================
	Setting File provider when working with file manipulation
==================================================================================================================
	
	1. Add following code in Manifest
	<provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

	2. Create provider_paths.xml 
	<?xml version="1.0" encoding="utf-8"?>
	<paths>
	    <external-path name="external_files" path="."/>
	    <cache-path name="cache" path="/" />
	</paths>

	3. Now use file provider in Activity as fllows:
	String authorities = ProfileActivity.this.getApplicationContext().getPackageName() + ".provider";
        Uri mSelectedFileUri = FileProvider.getUriForFile(ProfileActivity.this, authorities, selectedFile);
	Note: In above code, the type of selectedFile argument is File type



==================================================================================================================
	Hide menu item in NavigationView
==================================================================================================================

	NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);

	Menu menu =navigationView.getMenu();
	MenuItem target = menu.findItem(R.id.nav_target);
	target.setVisible(false);

	NavigationView nav_drawer = (NavigationView) findViewById(R.id.nav_drawer);
	nav_drawer.getMenu().findItem(R.id.navigation_item_1).setVisible(false);

	
==================================================================================================================
	Hide menu item group in NavigationView
==================================================================================================================
	<group
	android:id="@+id/group_1"
	android:checkableBehavior="single"
	android:visible="false">

	navigationView.getMenu().setGroupVisible(R.id.group_1, true)
==================================================================================================================
	Set Onclick listener on recyclerview item (in onBindViewHolder ) 
==================================================================================================================
	((View) holder.salesman.getParent().getParent().getParent()).setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    Toast.makeText(context, "Clicked", Toast.LENGTH_SHORT).show();
                }
            });
==================================================================================================================
	Firebase Listeners
==================================================================================================================

	1.addListenerForSingleValueEvent()

	Read data once - it triggers once and then does not trigger again.


	2. ValueEventListener

	The onDataChange() method is called every time data is changed at the specified database reference, including changes to children.


==================================================================================================================
	Display Alert Dialog
==================================================================================================================

  	AlertDialog.Builder builder = new AlertDialog.Builder(ChatActivity.this);
                builder.setTitle("Alert Dialog Title");
                builder.setMessage("Alert Dialog Message");
                builder.setPositiveButton("YES", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        
                    }
                });
                builder.setNegativeButton("NO", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        

                    }
                });

         builder.create().show();

==================================================================================================================
	Start activity to get result from that activity when activity finishes.
==================================================================================================================

	1. Start Activity:

	startActivityForResult(new Intent(“YourFullyQualifiedClassName”),requestCode);
	In the activity you can make use of setData() to return result.

	2. Add code when activity is finishing

	Intent data = new Intent();
	String text = "Result to be returned...."
	data.setData(Uri.parse(text));
	setResult(RESULT_OK, data);
	finish();

	3. Get result in onActivityResult of Parent Activity


==================================================================================================================
	Changing XML drawable color programatically
==================================================================================================================
	
	1. XML Drawable code:
	<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
	    <item
		android:id="@+id/btn_background_drawable">
		<shape android:shape="rectangle">
		    <corners android:radius="20dp"/>
		    <solid android:color="@color/colorPrimary" />
		</shape>
	    </item>
	</layer-list>

	2. Set above XML drawable asbackground to view(button, textview etc)

	3.Change view color programatically
	LayerDrawable l1 = (LayerDrawable) holder.payment_status.getBackground();
        GradientDrawable paymentStatusDrawable= (GradientDrawable) l1.findDrawableByLayerId(R.id.btn_background_drawable);
	//Note in above line btn_background_drawable is item id of XML drawable created in step 1 
        paymentStatusDrawable.setColor(getResources().getColor(R.color.colorGreen));


==================================================================================================================
	Set custom icon to notification in Mi(Xiaomi) devices
==================================================================================================================
	
	try {
        Class miuiNotificationClass = Class.forName("android.app.MiuiNotification");
        Object miuiNotification = miuiNotificationClass.newInstance();
        Field field = miuiNotification.getClass().getDeclaredField("customizedIcon");
        field.setAccessible(true);

        field.set(miuiNotification, true);
        field = notification.getClass().getField("extraNotification");
        field.setAccessible(true);

        field.set(notification, miuiNotification);
    	} catch (Exception e) {
		
    	}



==================================================================================================================
	Sending JSON array in volley request
==================================================================================================================	


	https://stackoverflow.com/a/42000668/4472727


==================================================================================================================
	Get the key of pushed value in firebase
==================================================================================================================

	String mKey = myRef.push().getKey();
	....
	....
	myRef.child(mKey).setValue(new ChatGroup());


===================================================================================================================
	OnBind is not called in service
===================================================================================================================

	the issue is that the examples that show the creation of the service, don't include the onBind method or they
	have the following sample code or it generates this for you:

	public IBinder onBind(Intent intent) {
	    // TODO Auto-generated method stub
	    return null;
	}
	This causes the onServiceConnected method to fail or never actually get executed. The fix is VERY simple, which is the following:

	public IBinder onBind(Intent intent) {
	    return mBinder;
	}
	Where you could create a simple binder such as the following to return:

	private final IBinder mBinder = new LocalBinder();
	public class LocalBinder extends Binder {
	    public ConferenceService getService() {
	    return ConferenceService.this;
	  }
	}

===================================================================================================================
	Upload multiple images to server using volley
===================================================================================================================

	http://sachinverma.co.in/upload-multiple-images-to-server-using-volley-android/


==============================================================================================
	Stylish Fonts
==============================================================================================

	https://befonts.com/

==============================================================================================
	WebRTC Video call notification
==============================================================================================
	https://github.com/signalapp/Signal-Android/blob/master/src/org/thoughtcrime/securesms/webrtc/CallNotificationBuilder.java


==============================================================================================
	https://evgenii.com/blog/spring-button-animation-on-android/
==============================================================================================
	

	1. Create Android Resource File ==>> res/anim/bounce.xml
	<?xml version="1.0" encoding="utf-8"?>
	<set xmlns:android="http://schemas.android.com/apk/res/android" >

	    <scale
		android:duration="2000"
		android:fromXScale="0.3"
		android:toXScale="1.0"
		android:fromYScale="0.3"
		android:toYScale="1.0"
		android:pivotX="50%"
		android:pivotY="50%" />
	</set>

	2. Add following code on Button click
	final Animation myAnim = AnimationUtils.loadAnimation(this, R.anim.bounce);
    	button.startAnimation(myAnim);

	3. Implement the bounce interpolator
	class MyBounceInterpolator implements android.view.animation.Interpolator {
	    private double mAmplitude = 1;
	    private double mFrequency = 10;

	    MyBounceInterpolator(double amplitude, double frequency) {
		mAmplitude = amplitude;
		mFrequency = frequency;
	    }

	    public float getInterpolation(float time) {
		return (float) (-1 * Math.pow(Math.E, -time/ mAmplitude) *
		        Math.cos(mFrequency * time) + 1);
	    }
	}
	4. Use the bounce interpolator
	final Animation myAnim = AnimationUtils.loadAnimation(this, R.anim.bounce);

    	// Use bounce interpolator with amplitude 0.2 and frequency 20
    	MyBounceInterpolator interpolator = new MyBounceInterpolator(0.2, 20);
    	myAnim.setInterpolator(interpolator);

    	button.startAnimation(myAnim);

==============================================================================================
	Enable Multidex in application (if min SDK < 21)
==============================================================================================

	Step 1:
	android {
	    defaultConfig {
		...
		minSdkVersion 15 
		targetSdkVersion 25
		multiDexEnabled true
	    }
	    ...
	}

	dependencies {
	  compile 'com.android.support:multidex:1.0.1'
	}

	Step 2:
	public class MyApplication extends MultiDexApplication {
	  @Override
	  protected void attachBaseContext(Context base) {
	     super.attachBaseContext(base);
	     MultiDex.install(this);
	  }
	}

	Step 3:
	<?xml version="1.0" encoding="utf-8"?>
	<manifest xmlns:android="http://schemas.android.com/apk/res/android"
	    package="your package name">
	    <application
		android:name=".MyApplication" >
		...
	    </application>
	</manifest>



==============================================================================================
	Creating BroadcastReceiver
==============================================================================================

	Android provides this component, which can listen to global events (e.g., battery events,
	network events, etc.) as well as custom events. You can use this component to create a 
	custom event that is triggered when the upload is complete.

	To do this, you need to create a custom class that extends BroadcastReceiver, register it 
	in the manifest, and use Intent and IntentFilter to create the custom event. To trigger the 
	event, you will need the sendBroadcast method.

	1. Manifest:

	<receiver android:name="UploadReceiver">
	   
	    <intent-filter>
		<action android:name="com.example.upload">
		</action>
	    </intent-filter>
	   
	</receiver>
	
	2. Receiver:

	public class UploadReceiver extends BroadcastReceiver {

	    @Override
	    public void onReceive(Context context, Intent intent) {
		if (intent.getBoolean(“success”, false) {
		    Activity activity = (Activity)context;
		    activity.updateUI();
	    }

	}
	
	3. Sender:

	Intent intent = new Intent();
	intent.setAction("com.example.upload"); 
	sendBroadcast(intent);


==============================================================================================
	Creating Handler
==============================================================================================

	new Handler().postDelayed(new Runnable() {

	     @Override
	     public void run() {
		 // TODO Auto-generated method stub
		 Intent intent = new Intent(context, AcceptReject.class);
		 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
		 context.startActivity(intent);
	     }
	 }, 2000);



==============================================================================================
	Bitbucket project syncying
==============================================================================================


	if more than one user is using repo
	git stash save

	get update code
	git pull

	git commit -m "Your comment goes here"

	git push


==============================================================================================
	Create thumbnail of image
==============================================================================================

	1. Create class Image Utils with following methods

	public static Bitmap getResizedBitmap(int targetW, int targetH,  String imagePath) {

		// Get the dimensions of the bitmap
		BitmapFactory.Options bmOptions = new BitmapFactory.Options();
		//inJustDecodeBounds = true <-- will not load the bitmap into memory
		bmOptions.inJustDecodeBounds = true;
		BitmapFactory.decodeFile(imagePath, bmOptions);
		int photoW = bmOptions.outWidth;
		int photoH = bmOptions.outHeight;

		// Determine how much to scale down the image
		int scaleFactor = Math.min(photoW/targetW, photoH/targetH);

		// Decode the image file into a Bitmap sized to fill the View
		bmOptions.inJustDecodeBounds = false;
		bmOptions.inSampleSize = scaleFactor;
		bmOptions.inPurgeable = true;

		Bitmap bitmap = BitmapFactory.decodeFile(imagePath, bmOptions);
		return(bitmap);
	}

	public static String encodeBase64(Bitmap imgBitmap){
		ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
		imgBitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream);
		byte[] byteArray = byteArrayOutputStream.toByteArray();
		return Base64.encodeToString(byteArray, Base64.DEFAULT);
	}

	2. Get scaled bitmap from Imager URI

		Bitmap scaledImage = ImageUtils.getResizedBitmap(80, 100, file.getPath());

	3. Now encode bitmap to base64 and get it in String format and store it to database

                String imageThumbnail = ImageUtils.encodeBase64(scaledImage);

	4. To display the the thumbnail on imageview you have to convert base64 string back
	 to bitmap and you will get bitmap.	
	

	
==============================================================================================
	Java Interview Questions
==============================================================================================

	http://www.java2novice.com/java_interview_questions/



==============================================================================================
	Sendine Email in Android				
==============================================================================================
	1. Javamail API - requres SMTP server( google)
	2. Mailgun - https://www.simplifiedcoding.net/mailgun-android-example/
		

==============================================================================================
	AsyncTask Library				
==============================================================================================

	https://github.com/Arasthel/AsyncJobLibrary


==============================================================================================
	Firebase push notification with image using PHP				
==============================================================================================

	1. Triggering notification from android app
	https://www.simplifiedcoding.net/firebase-cloud-messaging-android/

	2. Subscribe to topic
	https://www.simplifiedcoding.net/firebase-cloud-messaging-tutorial-android/


==============================================================================================
	Check if service is running in background		
==============================================================================================

	1.) In Activity class:

	private boolean isMyServiceRunning(Class<?> serviceClass) {
	    ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
	    for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
		if (serviceClass.getName().equals(service.service.getClassName())) {
		    return true;
		}
	    }
	    return false;
	}
	2.) In Non-Activity class (BroadcastReceiver):

	private boolean isMyServiceRunning(Class<?> serviceClass,Context context) {
		ActivityManager manager = (ActivityManager)context. getSystemService(Context.ACTIVITY_SERVICE);
		for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
		    if (serviceClass.getName().equals(service.service.getClassName())) {
		        Log.i("Service already","running");
		        return true;
		    }
		}
		Log.i("Service not","running");
		return false;
	    }

	3. From BroadcastReceiver

	private boolean isMyServiceRunning(Context context) {
	ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
	for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
	    if (MyService.class.getName().equals(service.service.getClassName())) {
		return true;
	    }
	}

	return false;
	}

==============================================================================================
	Android WebRTC video tutorial	
==============================================================================================

	https://www.youtube.com/watch?v=NIs9MEapAsw


==============================================================================================
	Node multi room chat app	
==============================================================================================

	Video - https://www.youtube.com/watch?v=edLHaRWWWtQ
	Code - https://github.com/andrewjmead/node-course-2-chat-app
	Modified Version - https://github.com/angristan/node-chat-app

==============================================================================================
	Click listener for RecyclerView item
==============================================================================================

	https://android.jlelse.eu/click-listener-for-recyclerview-adapter-2d17a6f6f6c9


==============================================================================================
	Android animation for textview/ layout
==============================================================================================

	https://www.journaldev.com/9481/android-animation-example

	



**************************************************************************************
	 Text drawable library
**************************************************************************************
	
	This light-weight library provides images with letter/text like the Gmail app. 

	https://github.com/amulyakhare/TextDrawable
	compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'



**************************************************************************************
	Pdf viewer with min SDK 15 
**************************************************************************************

	https://github.com/rameshvoltella/Android-Viger_View_Pager_PDF_OpenSource
	compile 'com.github.aerdy:Android-Viger_View_Pager_PDF_OpenSource:-SNAPSHOT'


**************************************************************************************
	Audjast view automaticlly in layout (like multiple tags in row) 
**************************************************************************************
	A FlowLayout for Android, which allows child views flow to next row when there
	 is no enough space. The spacing between child views can be calculated by the 
	FlowLayout so that the views are evenly placed.

	https://github.com/nex3z/FlowLayout



**************************************************************************************
	StudyBook Response Format
**************************************************************************************

	Response Format for StudyBook

	{
  	
		"status": true,
  
		"message": "Feeds found.",
  
		"data": [
    
				{
      
    
				
				},

				
				{
      
    
					
				}
  
			],
 
		 "error": []
	
}
	

**************************************************************************************
	Hide layout when Recyclerview is scrolled
**************************************************************************************


	    DemoRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {

            @Override
            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                visibleItemCount = LM.getChildCount();
                totalItemCount = LM.getItemCount();
                firstVisibleItem = LM.findFirstVisibleItemPosition();

                if (dy > 0) {
                    ((BaseABNavActivity) activity).PostFAB.setVisibility(View.GONE);
                    ((BaseABNavActivity) activity).bottomPanelRL.setVisibility(View.GONE);
                } else if (dy < 0) {
//                    ((BaseABNavActivity) activity).PostFAB.setVisibility(View.VISIBLE);
                    ((BaseABNavActivity) activity).bottomPanelRL.setVisibility(View.VISIBLE);
                }
                if (totalItemCount > 10) { // if the list is more than 10 then only pagination will work
                    if (loading) {
                        if (totalItemCount > previousTotalItemCount) {
                            loading = false;
                            previousTotalItemCount = totalItemCount;
                        }
                    }
                    if (!loading && (totalItemCount - visibleItemCount)
                            <= (firstVisibleItem + visibleThreshold)) {

                        int i = 0;
                        while (i < totalItemCount) {

                            if (feedArrayList.size() > 0 && feedArrayList.size() > totalItemCount - 1 - i) {
                                if (feedArrayList.get(totalItemCount - 1 - i).getId().equals("00")) {
                                    i++;
                                } else {
                                    last_post_id = feedArrayList.get(totalItemCount - 1 - i).getId();
                                    i = totalItemCount;
                                }
                            }
                        }
                        if (isalreadyconnected == 0) {
//                            Log.e("feeds ", "called 2 " + feedArrayList.size());
                            RefreshFeedList(false);// from pagination
                            isalreadyconnected = 1;
                        }
                        loading = true;
                    }
                }
            }
        });


	Circular recyclerview
	https://stackoverflow.com/questions/31253555/how-do-i-create-a-circular-endless-recyclerview


	Recyclerview with radio group	
	http://www.zoftino.com/android-recyclerview-radiogroup


**************************************************************************************
	Generate SHA key Hash (req for facebook login)
**************************************************************************************


    public static void generateKeyHash(Context ctx) {

        try {
            PackageInfo info = ctx.getPackageManager().getPackageInfo(
                    ctx.getPackageName(),
                    PackageManager.GET_SIGNATURES);
            for (Signature signature : info.signatures) {
                MessageDigest md = MessageDigest.getInstance("SHA");
                md.update(signature.toByteArray());
                Log.e("TAG_KEY_HASH", Base64.encodeToString(md.digest(), Base64.DEFAULT));
            }
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
    }

	
**************************************************************************************
	Send ArayList of object type (Model) to next Activity
**************************************************************************************

	1. First implent your Model class to Serializable
	2. In sending activity 
			Intent resultIntent = new Intent(FirstActivity.this, SecondActivity.class);
            Bundle bundle = new Bundle();
            bundle.putSerializable("RESULT_MODEL", modelList);
            resultIntent.putExtras(bundle);
            startActivity(resultIntent);
	3. In receiving activity
			ArrayList<QuizModel> quiz_list;
			
			Bundle bundleObject = getIntent().getExtras();
			quiz_list = (ArrayList<QuizModel>) bundleObject.getSerializable("RESULT_MODEL");

**************************************************************************************
	Ecommerce app using Firebase
**************************************************************************************

	https://github.com/singhkshitij/MagicPrint-ECommerce-App-Android

	
**************************************************************************************
	Set custom dialog background color to transparent
**************************************************************************************

	dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));
	
	or
	
	dialog.getWindow().setBackgroundDrawable(new ColorDrawableResource(R.color.transparent));
	
**************************************************************************************
	Set custom dialog width to match parent
**************************************************************************************
	
	dialog = new Dialog(MainActivity.this, LinearLayoutCompat.LayoutParams.MATCH_PARENT);
	
**************************************************************************************
	Share App
**************************************************************************************
	
	String playStoreLink = "https://play.google.com/store/apps/details?id=" + getPackageName();
            
    Bitmap bitmap = getBitmapFromView(cv_dashboard, cv_dashboard.getChildAt(0).getHeight(), cv_dashboard.getChildAt(0).getWidth());
    String bitmapPath = MediaStore.Images.Media.insertImage(this.getContentResolver(), bitmap,"Quiz Result", null);
    Uri bitmapUri = Uri.parse(bitmapPath);
    Intent shareIntent = new Intent(android.content.Intent.ACTION_SEND);
    shareIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    shareIntent.putExtra(Intent.EXTRA_STREAM, bitmapUri);
    shareIntent.putExtra(Intent.EXTRA_TEXT,"Hey please check this application " + "https://play.google.com/store/apps/details?id=" +getPackageName());
    shareIntent.setType("image/*");
    startActivity(Intent.createChooser(shareIntent,"Share with"));
	
**************************************************************************************
	Android P network security issue
**************************************************************************************
	if API base url is http, in Android Pie version network request failed
	1. Create network_security_config.xm file in res> XML folder.
		
		<?xml version="1.0" encoding="utf-8"?>
		<network-security-config>
			<domain-config cleartextTrafficPermitted="true">
				<domain includeSubdomains="true">35.163.32.122</domain>
			</domain-config>
		</network-security-config>

	2. add following line in <application> tage of Manifest file
		android:networkSecurityConfig="@xml/network_security_config"
		
		
**************************************************************************************
	Generate randon no in range
**************************************************************************************
	
		public int getRandomInteger(int upper_bound, int lower_bound) {
        Random rand = new Random();
        int random_integer = rand.nextInt(upper_bound - lower_bound) + lower_bound;
        return random_integer;
    }


**************************************************************************************
	Disable taking screenshot in activity
**************************************************************************************

	You need to set flag before setContentView() as follows:
	
	public class MainActivity extends Activity {
    @Override
    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,
                WindowManager.LayoutParams.FLAG_SECURE);
        setContentView(R.layout.activity_main);
    }
}

**************************************************************************************
	Set custom value at particular index of textview
**************************************************************************************


    coinsTextTV.setText(String.format("You currently have %s points", rewardPoints.getReward_points()));
	
	
	
**************************************************************************************
	Play mp3 from raw folder
**************************************************************************************	

	res -> raw
	
	final int[] resID = {R.raw.play, R.raw.stop};
	
	// stops any current playing audio
	mediaPlayer.reset();
    mediaPlayer =  MediaPlayer.create(getApplicationContext(), R.raw.play);
	// mediaPlayer =  MediaPlayer.create(getApplicationContext(), resID[i]);
    mediaPlayer.start();

	
***************************************************************************************************
	Get device id 
***************************************************************************************************

	public String getDeviceId() {
        TelephonyManager telephonyManager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        return telephonyManager.getDeviceId();
    }
	
	
***************************************************************************************************
	 Set custom font to whole application (TextView)
***************************************************************************************************

	https://stackoverflow.com/a/16407123

	1. Create new font resource folder res => font and add font file in it
	2. Create new font resource file custom_font.xml with following code
		
		<?xml version="1.0" encoding="utf-8"?>
		<font-family xmlns:android="http://schemas.android.com/apk/res/android">
			<font
				android:fontStyle="normal"
				android:fontWeight="400"
				android:font="@font/montserrat_regular" />
			<font
				android:fontStyle="italic"
				android:fontWeight="400"
				android:font="@font/montserrat_regular" />
		</font-family>
	
	3. Add following in Styles.xml file (AppTheme)
	
		<item name="android:textViewStyle">@style/RobotoTextViewStyle</item>
	
		<style name="RobotoTextViewStyle" parent="android:Widget.TextView">
			<item name="android:fontFamily">@font/custom_font</item>
		</style>\
		
		
***************************************************************************************************
	 Set custom font to specific TextView only
***************************************************************************************************

	1. Follow step no 1 and 2 as mentioned above.
	2.    <TextView
            android:id="@+id/tvTitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Home"
            android:fontFamily="@font/custom_font"/>

***************************************************************************************************
	Integrate Admob ads in android
***************************************************************************************************

	https://www.tutlane.com/tutorial/android/android-integrate-admob-rewarded-video-ads-in-app


	
***************************************************************************************************
	Show PDF in Webview
***************************************************************************************************
	
	
	if (url.contains(".pdf")) {
            webView.loadUrl("https://docs.google.com/gview?embedded=true&url=" + url);
        } else {
            webView.loadUrl(url);
        }

***************************************************************************************************
	Image Sliders
***************************************************************************************************
		
	https://github.com/metes/Android-Slider
	
	
***************************************************************************************************
	add press back again to exit toast
***************************************************************************************************\

	boolean doubleBackToExitPressedOnce = false;

	
	public void CustomBackPressed() {
        //Checking for fragment count on backstack
        if (!doubleBackToExitPressedOnce) {
            this.doubleBackToExitPressedOnce = true;
            Toast.makeText(this, "Please click BACK again to exit.", Toast.LENGTH_SHORT).show();

            new Handler().postDelayed(new Runnable() {

                @Override
                public void run() {
                    doubleBackToExitPressedOnce = false;
                }
            }, 2000);
        } else {
            finish();
            return;
        }
    }
	
***************************************************************************************************
	Create round bottom rml drawable
***************************************************************************************************
	
	<?xml version="1.0" encoding="utf-8"?>
	<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
		<item>
			<shape android:shape="rectangle" />
		</item>
		<item
			android:bottom="0dp"
			android:left="-100dp"
			android:right="-100dp"
			android:top="-110dp">
			<shape android:shape="oval">
				<gradient
					android:angle="315"
					android:endColor="#FF7A01"
					android:startColor="@color/redText" />
			</shape>
		</item>
	</layer-list>

***************************************************************************************************
	Get instatnce of fragment
***************************************************************************************************

	// declare manager globally
	public static FragmentManager manager;
	
	// add following line in onCreate()
	manager = getSupportFragmentManager();
	
	// check instance
	 Fragment fragment = manager.findFragmentById(R.id.container);
        if (fragment instanceof LoginFragment) {
            finish();
        }
		
***************************************************************************************************
	Get instatnce of fragment
***************************************************************************************************		
		
		 if (!isTaskRoot()
                && getIntent().hasCategory(Intent.CATEGORY_LAUNCHER)
                && getIntent().getAction() != null
                && getIntent().getAction().equals(Intent.ACTION_MAIN)) {

            finish();
            return;
        }
		
***************************************************************************************************
	OTP auto read functionality
***************************************************************************************************	
		
		implementation 'com.github.stfalcon:smsverifycatcher:0.3.2'
		
		
***************************************************************************************************
	Send Retrofit parameters as HashMap
***************************************************************************************************	
	1. Create API call
	@FormUrlEncoded
	@POST("registration")
    Call<OTPResponse> registration(
            @FieldMap Map<String,String> params);
	2. Add input parameters	
	
	Map<String,String> params = new HashMap<>();
            params.put(Constant.STR_USERNAME,username);
            params.put(Constant.STR_PASSWORD,password);
	3. Send HashMap as params
	getLogin(params);
	
***************************************************************************************************
	Show Snackbar
***************************************************************************************************	

	Snackbar.make(findViewById(R.id.main_layout), "Authentication Failed.", Snackbar.LENGTH_SHORT).show();

***************************************************************************************************
	Shuffle RecyclerView items
***************************************************************************************************
	
	https://github.com/wasabeef/recyclerview-animators
	
***************************************************************************************************
	Viewpager Transformers
***************************************************************************************************
	https://github.com/geftimov/android-viewpager-transformers


***************************************************************************************************
	Limit decimal points in string
***************************************************************************************************
	String.format("%.2f", Double.valueOf("46542.5435657468"));

***************************************************************************************************
	Alert Dialog
***************************************************************************************************

	public void showProfilePictureDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle("Choose Media");
        builder.setMessage("Choose your image from ?");
        builder.setPositiveButton("CAMERA", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                checkStorage();
                getImageFromCamera();
            }
        });
        builder.setNegativeButton("GALLERY", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                checkStorage();
                getImageFromGallery();
            }
        });

        builder.create().show();
    }

***************************************************************************************************
	Push project to github
***************************************************************************************************

1. Sign up and create a GitHub account in www.github.com.
2. Download git from https://git-scm.com/downloads and install it in your system.
3. Open the project in android studio and go to File -> Settings -> Version Control -> Git.
4. Click on test button to test "path to Git executables". If successful message is shown everything is ok, else navigate to git.exe 
from where you installed git and test again.
5. Go to File -> Settings -> Version Control -> GitHub. Enter your email and password used to create GitHub account and click on OK button.
6. Then go to VCS -> Import into Version Control -> Share Project on GitHub. Enter Repository name, Description and click Share button.
7. In the next window check all files inorder to add files for initial commit and click OK.
Now the project will be uploaded to the GitHub repository and when uploading is finished we will get a message in android studio showing "Successfully 
shared project on GitHub". Click on the link provided in that message to go to GitHub repository.

***************************************************************************************************
	Hide undrline below EditText
***************************************************************************************************
	android:background="@null"
	
***************************************************************************************************
	Capitalize first character in string
***************************************************************************************************
	    public static String CapitalizeFirstLetterText(String text) {
        if (!TextUtils.isEmpty(text)) {
            if (text.contains(" ")) {
                String[] strarr = text.split(" +");
                String fname = null;
                for (String name : strarr) {
                    name = Character.toUpperCase(name.charAt(0)) + name.substring(1); // d
                    fname = (fname == null ? name : fname + " " + name);
                }
                return fname;
            } else return Character.toUpperCase(text.charAt(0)) + text.substring(1);
        }
        return text;
    }
   
***************************************************************************************************
	Custom calender like speedo meter 
***************************************************************************************************

	https://github.com/RameshBhupathi/PickerView
	
	compile 'com.ramesh.mypicker:pickerview:1.1'
    
***************************************************************************************************
	Add image screenshot to README.md on github
***************************************************************************************************

	<img src="https://github.com/ervinod/BottomAppBar/blob/master/Screenshot.png" width="300">

***************************************************************************************************
	Hide activity statusbar programatically
***************************************************************************************************
	

***************************************************************************************************
	Add equal spacing to gridview items
***************************************************************************************************
	getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
	
	https://stackoverflow.com/questions/28531996/android-recyclerview-gridlayoutmanager-column-spacing
	
***************************************************************************************************
	Show popup menu
***************************************************************************************************
	1 - Create the menu layout menu_layout.xml:
	<?xml version="1.0" encoding="utf-8"?>
	<menu xmlns:android="http://schemas.android.com/apk/res/android">
	    <item
		android:id="@+id/item_edit"
		android:showAsAction="ifRoom|withText"
		android:title="Edit"
		android:visible="true"/>
	    <item
		android:id="@+id/item_delete"
		android:showAsAction="ifRoom|withText"
		android:title="Delete"
		android:visible="true"/>
	</menu>
	
	2 - Create a popup menu, inflate the xml layout and show it:
	
	public void showMenu (View view)
	{
	    PopupMenu menu = new PopupMenu (this, view);
	    menu.setOnMenuItemClickListener (new PopupMenu.OnMenuItemClickListener ()
	    {
		@Override
		public boolean onMenuItemClick (MenuItem item)
		{
		    int id = item.getItemId();
		    switch (id)
		    {
			case R.id.item_edit: Log.i (Tag, "settings"); break;
			case R.id.item_delete: Log.i (Tag, "about"); break;
		    }
		    return true;
		}
	    });
	    menu.inflate (R.menu.menu_layout);
	    menu.show();
	}
	
***************************************************************************************************
	Upload Image to Amazon S3 Bucket
***************************************************************************************************
	1. Cognito credential provider.
	public static final String COGNITO_POOL_ID = "us-east-1:2ef0d6b7-e833-445d-a5b4-959c1a30d5c9";
    	public static final Regions AWS_REGION = Regions.US_EAST_1 ;
    	public static final String BUCKET_NAME = "your_bucket_name";
    	public static final String AWS_URL = "https://s3.amazonaws.com/";
	
	2. Create UploadAmazonS3 that will contains functionality to upload image
	
	public class UploadAmazonS3 {

	    private CognitoCachingCredentialsProvider credentialsProvider = null;
	    private AmazonS3Client s3Client = null;
	    private TransferUtility transferUtility = null;
	    private static UploadAmazonS3 uploadAmazonS3;

	    /**
	     * Creating single tone object by defining private.
	     * <p>
	     * At the time of creating
	     * </P>
	     */
	    private UploadAmazonS3(Context context, String canito_pool_id) {
		/**
		 * Creating the object of the getCredentialProvider object. */
		credentialsProvider = getCredentialProvider(context, canito_pool_id);
		/**
		 * Creating the object  of the s3Client */
		s3Client = getS3Client(context, credentialsProvider);

		/**
		 * Creating the object of the TransferUtility of the Amazone.*/
		transferUtility = getTransferUtility(context, s3Client);

	    }

	    public static UploadAmazonS3 getInstance(Context context, String canito_pool_id) {
		if (uploadAmazonS3 == null) {
		    uploadAmazonS3 = new UploadAmazonS3(context, canito_pool_id);
		    return uploadAmazonS3;
		} else {
		    return uploadAmazonS3;
		}

	    }

	    /**
	     * <h3>Upload_data</h3>
	     * <p>
	     * Method is use to upload data in the amazone server.
	     * <p>
	     * </P>
	     */

	    public void Upload_data(String buckate_name, String fileName, File file, final Upload_CallBack callBack) {

		Log.d("Amazon transferUtility", transferUtility + "Amazon transferUtility file = " + file);
		if (transferUtility != null && file != null) {
		    TransferObserver observer = transferUtility.upload(buckate_name, fileName, file);
		    observer.setTransferListener(new TransferListener() {
			@Override
			public void onStateChanged(int id, TransferState state) {
			    if(TransferState.COMPLETED == state){
				callBack.sucess("sucess");
			    }else if(TransferState.FAILED == state){
				callBack.error("error");
			    }
			}

			@Override
			public void onProgressChanged(int id, long bytesCurrent, long bytesTotal) {

			    int percentage = (int) (bytesCurrent / bytesTotal * 100);
			    if (percentage == 100) {
				//callBack.sucess("sucess");
			    }

			}

			@Override
			public void onError(int id, Exception ex) {
			    callBack.error(id + ":" + ex.toString());
			}
		    });


		} else {
		    callBack.error("Amamzones3 is not intialize or File is empty !");
		}
	    }


	    /**
	     * This method is used to get the CredentialProvider and we provide only context as a parameter.
	     *
	     * @param context Here, we are getting the context from calling Activity.
	     */
	    private CognitoCachingCredentialsProvider getCredentialProvider(Context context, String pool_id) {
		if (credentialsProvider == null) {
		    credentialsProvider = new CognitoCachingCredentialsProvider(
			    context.getApplicationContext(),
			    pool_id, // Identity Pool ID
			    Constant.AWS_REGION // Region
		    );
		}
		return credentialsProvider;
	    }

	    /**
	     * This method is used to get the AmazonS3 Client
	     * and we provide only context as a parameter.
	     * and from here we are calling getCredentialProvider() function.
	     *
	     * @param context Here, we are getting the context from calling Activity.
	     */
	    private AmazonS3Client getS3Client(Context context, CognitoCachingCredentialsProvider cognitoCachingCredentialsProvider) {
		if (s3Client == null) {
		    s3Client = new AmazonS3Client(cognitoCachingCredentialsProvider);
		}
		return s3Client;
	    }

	    /**
	     * This method is used to get the Transfer Utility
	     * and we provide only context as a parameter.
	     * and from here we are, calling getS3Client() function.
	     *
	     * @param context Here, we are getting the context from calling Activity.
	     */
	    private TransferUtility getTransferUtility(Context context, AmazonS3Client amazonS3Client) {
		if (transferUtility == null) {
		    transferUtility = new TransferUtility(amazonS3Client, context.getApplicationContext());
		}
		return transferUtility;
	    }


	    /**
	     * Interface for the sucess callback fro the Amazon uploading .
	     */
	    public interface Upload_CallBack {
		/**
		 * Method for sucess .
		 *
		 * @param sucess it is true on sucess and false for falure.
		 */
		void sucess(String sucess);

		/**
		 * Method for falure.
		 *
		 * @param errormsg contains the error message.
		 */
		void error(String errormsg);

	    }

	    public void delete_Item(String bucketName, String keyName) {
		try {
		    s3Client.deleteObject(new DeleteObjectRequest(bucketName, keyName));
		} catch (AmazonServiceException ase) {
		    System.out.println("Caught an AmazonServiceException.");
		    System.out.println("Error Message:    " + ase.getMessage());
		    System.out.println("HTTP Status Code: " + ase.getStatusCode());
		    System.out.println("AWS Error Code:   " + ase.getErrorCode());
		    System.out.println("Error Type:       " + ase.getErrorType());
		    System.out.println("Request ID:       " + ase.getRequestId());
		} catch (AmazonClientException ace) {
		    System.out.println("Caught an AmazonClientException.");
		    System.out.println("Error Message: " + ace.getMessage());
		}
	    }
	   
	}


	3. Upload image using following function
	
	    private void uploadPicToAmazon() {

		UploadAmazonS3 uploadAmazonS3 = UploadAmazonS3.getInstance(activity, Constant.COGNITO_POOL_ID);
		uploadAmazonS3.Upload_data(Constant.BUCKET_NAME, "ProfileImage/" + newProfileImageUri.getLastPathSegment(), new File(newProfileImageUri.getPath()), new UploadAmazonS3.Upload_CallBack() {
		    @Override
		    public void sucess(String image_url) {

			Helper.hideProgress(mProgress);
			//profile_picture = Constant.AWS_URL + "ProfileImage/" + newProfileImageUri.getLastPathSegment();
			profile_picture = Constant.AWS_URL + Constant.BUCKET_NAME+ "/ProfileImage/" + newProfileImageUri.getLastPathSegment();
			Log.d("AWS SUCCESS", ":" + image_url);
			Log.d("IMAGE_URL", ":" + profile_picture);

		    }

		    @Override
		    public void error(String errormsg) {
			Helper.hideProgress(mProgress);
			Toast.makeText(activity, errormsg, Toast.LENGTH_SHORT).show();
			Log.d("AMAZON_ERROR", "" + errormsg);
		    }
		});
	    }
	    
	    


	
***************************************************************************************************
	Get image from Gallery or Camera
***************************************************************************************************	

	1. Initialize variables:
	
		private File newFile;
    		private Uri newProfileImageUri;
    		private String state, imageName, profile_picture = "";
		
	2. Create temporary File to hold image(call this finction in onCreate())
	    public void checkStorage() {
		imageName = "";
		state = Environment.getExternalStorageState();


		String folder_main = Constant.APP_FOLDER;
		File f = new File(Environment.getExternalStorageDirectory(), folder_main);
		if (!f.exists()) {
		    f.mkdirs();
		}
		imageName = Constant.APP_FOLDER + "_" + String.valueOf(System.nanoTime()) + ".png";

		if (Environment.MEDIA_MOUNTED.equals(state)) {
		    newFile = new File(f, imageName);
		    newProfileImageUri = Uri.fromFile(newFile);
		    //newProfileImageUri = FileProvider.getUriForFile(ProfileActivity.this, BuildConfig.APPLICATION_ID + ".provider",newFile);
		} else {
		    newFile = new File(activity.getFilesDir(), imageName);
		    newProfileImageUri = Uri.fromFile(newFile);
		    //cameranewProfileImageUri = FileProvider.getUriForFile(ProfileActivity.this, BuildConfig.APPLICATION_ID + ".provider",newFile);
		}
	    }

	3. Choose image from Camera or Gallery:
	
	    public void showSelectImageDialog() {

		final Dialog dialog = new Dialog(activity);
		dialog.setContentView(R.layout.layout_image_dialog);
		dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));

		TextView tvCamera = (dialog.findViewById(R.id.tvCamera));
		TextView tvGallery = (dialog.findViewById(R.id.tvGallery));


		tvCamera.setOnClickListener(new View.OnClickListener() {
		    @Override
		    public void onClick(View v) {
			dialog.dismiss();
			checkStorage();
			getImageFromCamera();
		    }
		});
		tvGallery.setOnClickListener(new View.OnClickListener() {
		    @Override
		    public void onClick(View v) {
			dialog.dismiss();
			checkStorage();
			getImageFromGallery();
		    }
		});
		dialog.show();
	    }


	private void getImageFromGallery() {
        checkStorage();
        try {
            Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
            photoPickerIntent.putExtra("return-data", true);
            photoPickerIntent.setType("image/*");
            startActivityForResult(photoPickerIntent, REQUEST_CODE_GALLERY);
        } catch (Exception e) {
            
            Intent photoPickerIntent = new Intent(Intent.ACTION_GET_CONTENT);
            photoPickerIntent.putExtra("return-data", true);
            photoPickerIntent.setType("image/*");
            startActivityForResult(photoPickerIntent, REQUEST_CODE_GALLERY);
        }
    }

    private void getImageFromCamera() {
        try {
            Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
            cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, newProfileImageUri);
            cameraIntent.putExtra("return-data", true);
            cameraIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
            startActivityForResult(cameraIntent, REQUEST_CODE_CAMERA);
        } catch (Exception e) {
            Toast.makeText(activity, "" + e.getMessage(), Toast.LENGTH_SHORT).show();
            Log.d("Error", e.toString());
        }
	

	4. Get selected/captured image URI:
	
	   @Override
	   protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == REQUEST_CODE_GALLERY && resultCode == RESULT_OK && null != data) {
		    try {
			InputStream inputStream = getContentResolver().openInputStream(data.getData());
			FileOutputStream fileOutputStream = new FileOutputStream(newFile);

			Helper.copyStream(inputStream, fileOutputStream);
			fileOutputStream.close();
			inputStream.close();

		
		    } catch (FileNotFoundException e) {
			e.printStackTrace();
			Toast.makeText(activity, "Something went wrong, Try again...", Toast.LENGTH_LONG).show();
		    } catch (IOException e) {
			e.printStackTrace();
		    }
		} else if (requestCode == REQUEST_CODE_CAMERA && resultCode == RESULT_OK) {
		    
		}

	    }
	    
	public void copyStream(InputStream input, OutputStream output) throws IOException {
		byte[] buffer = new byte[1024];
		int bytesRead;
		while ((bytesRead = input.read(buffer)) != -1) {
		    output.write(buffer, 0, bytesRead);
		}
	}    
	    
 ***************************************************************************************************
	Managing Fragment Transactions
 ***************************************************************************************************
 
 	public void replaceFragment(Fragment fragment) {
        String backStateName = fragment.getClass().getSimpleName();
        String fragmentTag = backStateName;
        Log.d(backStateName, "replaceFragment: " + getSupportFragmentManager().getBackStackEntryCount());


        FragmentManager manager = this.getSupportFragmentManager();
        boolean fragmentPopped = manager.popBackStackImmediate(backStateName, 0);

        if (!fragmentPopped && manager.findFragmentByTag(fragmentTag) == null) {
            //fragment not in back stack, create it.
            FragmentTransaction ft = manager.beginTransaction();
            ft.replace(R.id.goto_container, fragment, fragmentTag);
            ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
            ft.addToBackStack(backStateName);
            ft.commit();
        }
    }

    public void addFragment(Fragment fragment) {
        FragmentManager fragmentManager = this.getSupportFragmentManager();
        FragmentTransaction ft = fragmentManager.beginTransaction();
        ft.add(R.id.goto_container, fragment);
        ft.commit();
    }

    public void popAllStack(){
        FragmentManager fm = this.getSupportFragmentManager();
        for(int i = 0; i < fm.getBackStackEntryCount(); i++) {
            fm.popBackStack();
        }
    }

    public void popBackStack(){
        FragmentManager fm = this.getSupportFragmentManager();
        fm.popBackStack();
    }
    
    @Override
    public void onBackPressed() {

        Fragment fragment = manager.findFragmentById(R.id.container_main);
        if (fragment!=null && fragment instanceof ProfileFragment  ) {
            popBackStack();
        }else
            super.onBackPressed();
    }


 ***************************************************************************************************
	Upload Image in multiparts
 ***************************************************************************************************
 	1. Create api method call 
	@Multipart
	    @POST(WebConstants.SUBMIT_CREATE_POST_DATA_URL)
	    Call<CreatePostResponse> submit_create_post_data(
		    @Part("user_id") RequestBody user_id,
		    @Part MultipartBody.Part media
	    );
	1. Create request body and hit api
 	
	 RequestBody user_id = RequestBody.create(MediaType.parse("text"), SharedPreference.getInstance(this).getLoggedInUser().getId());
           
         MultipartBody.Part body = null;
            if (imageFlag) {
                File file = new File(getRealPathFromURI(selectedImage));
                RequestBody requestFile = RequestBody.create(MediaType.parse(getMimeType(selectedImage)), file);
                body = MultipartBody.Part.createFormData("media", file.getName(), requestFile);
            }
            WebInterface Service = AppController.getRetrofitInstance().create(WebInterface.class);
            Call<CreatePostResponse> call = Service.submit_create_post_data(user_id, caption, type,body);
            call.enqueue(new Callback<CreatePostResponse>() {
                @Override
                public void onResponse(Call<CreatePostResponse> call, Response<CreatePostResponse> response) {

                    if (response.body() != null) {
                       
                    }
                }

                @Override
                public void onFailure(Call<CreatePostResponse> call, Throwable t) {
                    hideProgress();
                    Toast.makeText(CreatePostActivity.this, t.getMessage(), Toast.LENGTH_SHORT).show();
                }
            });
	    
	   
	   3. Implement required methods
	   
	   @RequiresApi(api = Build.VERSION_CODES.KITKAT)
	    private String getRealPathFromURI(final Uri uri) {

		final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;

		// DocumentProvider
		if (isKitKat && DocumentsContract.isDocumentUri(this, uri)) {
		    // ExternalStorageProvider
		    if (isExternalStorageDocument(uri)) {
			final String docId = DocumentsContract.getDocumentId(uri);
			final String[] split = docId.split(":");
			final String type = split[0];

			if ("primary".equalsIgnoreCase(type)) {
			    return Environment.getExternalStorageDirectory() + "/" + split[1];
			}

			// TODO handle non-primary volumes
		    }
		    // DownloadsProvider
		    else if (isDownloadsDocument(uri)) {

			final String id = DocumentsContract.getDocumentId(uri);
			final Uri contentUri = ContentUris.withAppendedId(
				Uri.parse("content://downloads/public_downloads"), Long.valueOf(id));

			return getDataColumn(this, contentUri, null, null);
		    }
		    // MediaProvider
		    else if (isMediaDocument(uri)) {
			final String docId = DocumentsContract.getDocumentId(uri);
			final String[] split = docId.split(":");
			final String type = split[0];

			Uri contentUri = null;
			if ("image".equals(type)) {
			    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
			} else if ("video".equals(type)) {
			    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;
			} else if ("audio".equals(type)) {
			    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
			}

			final String selection = "_id=?";
			final String[] selectionArgs = new String[]{
				split[1]
			};

			return getDataColumn(this, contentUri, selection, selectionArgs);
		    }
		}
		// MediaStore (and general)
		else if ("content".equalsIgnoreCase(uri.getScheme())) {

		    // Return the remote address
		    if (isGooglePhotosUri(uri))
			return uri.getLastPathSegment();

		    return getDataColumn(this, uri, null, null);
		}
		// File
		else if ("file".equalsIgnoreCase(uri.getScheme())) {
		    return uri.getPath();
		}

		return null;
	    }


	    public static String getDataColumn(Context context, Uri uri, String selection,
					       String[] selectionArgs) {

		Cursor cursor = null;
		final String column = "_data";
		final String[] projection = {
			column
		};

		try {
		    cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,
			    null);
		    if (cursor != null && cursor.moveToFirst()) {
			final int index = cursor.getColumnIndexOrThrow(column);
			return cursor.getString(index);
		    }
		} finally {
		    if (cursor != null)
			cursor.close();
		}
		return null;
	    }


	    /**
	     * @param uri The Uri to check.
	     * @return Whether the Uri authority is DownloadsProvider.
	     */
	    public static boolean isDownloadsDocument(Uri uri) {
		return "com.android.providers.downloads.documents".equals(uri.getAuthority());
	    }

	    /**
	     * @param uri The Uri to check.
	     * @return Whether the Uri authority is MediaProvider.
	     */
	    public static boolean isMediaDocument(Uri uri) {
		return "com.android.providers.media.documents".equals(uri.getAuthority());
	    }

	    /**
	     * @param uri The Uri to check.
	     * @return Whether the Uri authority is Google Photos.
	     */
	    public static boolean isGooglePhotosUri(Uri uri) {
		return "com.google.android.apps.photos.content".equals(uri.getAuthority());
	    }
	    
	    
		    /**
	     * @param uri The Uri to check.
	     * @return Whether the Uri authority is ExternalStorageProvider.
	     */
	    public static boolean isExternalStorageDocument(Uri uri) {
		return "com.android.externalstorage.documents".equals(uri.getAuthority());
	    }
	    
 ***************************************************************************************************
	Call fragment method from adapter (without using interface)
 ***************************************************************************************************
 
 	1. Pass the fragment object in adapter
 	adapter = new MyAdapter(getContext(), TestFragment.this, testArrayList);
        recycleRuleList.setAdapter(adapter);
	
	2. Set current instance f fragment to this:
	public TestSeriesAdapter(Context context, ArrayList<Test> testArrayList, Fragment fragment) {
        this.context = context;
        this.testArrayList = testArrayList;
	this.fragment = fragment;
	
    	}
	
	3. Crate public method in fragment
	public void ItemClicked(int position){
		Toast.makeText(this, "Position: "+position, Toast.LENGTH_SHORT).show();
	}

        4. Call ItemClicked method from onBindViewHolder() of adapter like this
	((TestFragment)fragment).ItemClicked(position);

 
  ****************************************************************************************************
	Call fragment method from adapter (using interface)
  ****************************************************************************************************
 
 	1. Create interface inside adapter class
	
 	public Interface CallBack{
         void yourMethodName();

         }
	 
	 2. Now in fragment class implement your interface method like below

	public class YourFragment implements CallBack{
	    
	     @Override
	     public void yourMethodName(){
	      //"here call your fragment method or do any bussiness logic 
	      }    
	  }
	  
	 3. Finally you should call your interface method in your adapter onclick listener like below 
	 before that pass your interface instance to your adapter constructor

	public class YourAdapterClass extends BaseAdapter {
	
	  private CallBack mCallBack;
	  Context context;
	  
	   public YourAdapterClass (Context context, CallBack callback){
	    mCallBack = callback;
	    this.context = context;
	      }
	    }
	    
	4. Then inside your onClickListener call your interface method like this

	    @Override
		public void onClick(View v) {
		   mCallBack.yourMethodName();
		}
	    });
	    
  ****************************************************************************************************
	Get starting characters from string
  ****************************************************************************************************
  
	   public String getStartingChars(String str, int count) {
		return str.length() < count ? str : str.substring(0, count);
	    }
    
  ****************************************************************************************************
	Get ending characters from string
  ****************************************************************************************************
  
	  public String getEndingChars(String str, int count) {
		return str.length() < count ? str : str.substring(str.length()-count);
	    }

  ****************************************************************************************************
	Send firebase push notification without server
  ****************************************************************************************************

	    public void sendPushNotification(String sender_name, String receiver_name, String sender_id, String receiver_id,
                                     String user_image, String qb_id, String message) {
		JSONObject json = new JSONObject();
		try {
		    JSONObject notificationData = new JSONObject();
		    notificationData.put("type", Constant.PUSH_TYPE_CHAT);
		    notificationData.put("sender_name", sender_name);
		    notificationData.put("receiver_name", receiver_name);
		    notificationData.put("sender_id", sender_id);
		    notificationData.put("receiver_id", receiver_id);
		    // notificationData.put("user_image",user_image);
		    notificationData.put("room_id", "0");
		    notificationData.put("qb_id", qb_id);
		    notificationData.put("message", message);

		    Log.d("MESSAGE", notificationData.toString());

		    json.put("data", notificationData);
		    json.put("to", device_token);
		    Log.d("OPPONENT_TOKEN", device_token);

		    String newJson = json.toString().replaceAll(" ", "\\$");

		    json = new JSONObject(newJson);
		} catch (JSONException e) {
		    e.printStackTrace();
		}

		RequestQueue queue = Volley.newRequestQueue(MyChatActivity.this);

		JsonObjectRequest jsonObjectRequest = new JsonObjectRequest("https://fcm.googleapis.com/fcm/send", json, new com.android.volley.Response.Listener<JSONObject>() {
		    @Override
		    public void onResponse(JSONObject response) {

			Log.d("onResponse", "" + response.toString());
		    }
		}, new com.android.volley.Response.ErrorListener() {
		    @Override
		    public void onErrorResponse(VolleyError error) {

		    }
		}) {
		    @Override
		    public Map<String, String> getHeaders() throws AuthFailureError {

			Map<String, String> params = new HashMap<String, String>();
			params.put("Authorization", "key=AIzaSyAW_081eDxBWB78qhME*******");
			params.put("Content-Type", "application/json; charset=utf-8");
			return params;
		    }
		};

		queue.add(jsonObjectRequest);

	    }


  ****************************************************************************************************
	Send Local Broadcast from fragment
  ****************************************************************************************************
	    
	    
	In MyActivity, use LocalBroadcastManager to make the broadcast with a filter:

	String filter = "thisIsForMyFragment";
	Intent intent = new Intent(filter); //If you need extra, add: intent.putExtra("extra","something");
	LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
	In MyFragment, inside onCreateView() add this to register the receiver:

	LocalBroadcastManager.getInstance(getActivity()).registerReceiver(myBroadcastReceiver,
		new IntentFilter("thisIsForMyFragment"));
	Following, In MyFragment (outside onCreateView()) create the receiver method to receive the broadcast:

	private final BroadcastReceiver myBroadcastReceiver = new BroadcastReceiver()
	{
	    @Override
	    public void onReceive(Context context, android.content.Intent intent) {
		Toast.makeText(getActivity(), "Broadcast received!", Toast.LENGTH_SHORT).show();//Do what you want when the broadcast is received...

	    }
	};
	Finally, in MyFragment add this to unregister the receiver onDestroyView:

	@Override
	public void onDestroyView()
	{
	    super.onDestroyView();
	    LocalBroadcastManager.getInstance(getActivity()).unregisterReceiver(myBroadcastReceiver);
	}


  ****************************************************************************************************
	Cardview with round corners at top only
  ****************************************************************************************************
	    <FrameLayout
		android:id="@+id/rootview"
		android:layout_width="match_parent"
		android:layout_height="match_parent"
		android:layout_margin="50dp">

		<androidx.cardview.widget.CardView
		    android:id="@+id/card_view"
		    android:layout_marginBottom="-10dp"
		    app:cardCornerRadius="10dp"
		    android:layout_width="match_parent"
		    android:layout_height="match_parent"
		    app:cardElevation="15dp"
		    android:background="#464343">

		    <!--The child view inside the cardview should have extra padding,so that negative margin will not affect the bottom padding of its child.Here normally we have 16dp bottom padding for child + margin bottom of the parent is 3dp=19dp comes.-->

		    <FrameLayout
			android:layout_width="match_parent"
			android:layout_height="match_parent"
			android:paddingBottom="29dp"/>

		</androidx.cardview.widget.CardView>
	    </FrameLayout>

  ****************************************************************************************************
	Crash reporter dependency
  ****************************************************************************************************
  
	compile 'com.balsikandar.android:crashreporter:1.1.0'
	
  ****************************************************************************************************
	Generate room id using hashCode()
  ****************************************************************************************************

String room_id = "friend_id".compareTo("your_id") > 0 ? ("your_id" + "friend_id").hashCode() + "" : "" + ("friend_id" + "your_id").hashCode();
 
  ****************************************************************************************************
	Firebase dynamic link sharing
  ****************************************************************************************************
  
  	1. Add Firebase dynamic link dependency.
	implementation 'com.google.firebase:firebase-dynamic-links:16.1.3'
	
	if getting error change any of below dependency version to
	
	implementation 'com.google.firebase:firebase-core:16.0.5'
        implementation 'com.google.firebase:firebase-auth:16.1.0'
        implementation 'com.google.android.gms:play-services-auth:16.0.1'
        implementation 'com.google.firebase:firebase-messaging:17.4.0'

	2. Crrate dynamic link on firebase console.
	
	3. Call below function to create and share dynamic link of app
	
  	public static void shareArticleExternally(String id, final Activity activity) {

        Task<ShortDynamicLink> shortLinkTask = FirebaseDynamicLinks.getInstance().createDynamicLink()
                .setLink(Uri.parse("https://www.storistream.com/?postId=" + id))
                .setDynamicLinkDomain("storistream.page.link")
                .setAndroidParameters(new DynamicLink.AndroidParameters.Builder().build())
                .buildShortDynamicLink()
                .addOnCompleteListener(activity, new OnCompleteListener<ShortDynamicLink>() {
                    @Override
                    public void onComplete(@NonNull Task<ShortDynamicLink> task) {
                        if (task.isSuccessful()) {
                            // Short link created
                            Uri shortLink = task.getResult().getShortLink();
                            String msgHtml = String.format("<p>Let's check Article on StoriStream App."
                                    + "<a href=\"%s\">Click Here</a>!</p>", shortLink.toString());

                            String msg = "Let's check Article on StoriStream App.. Click on Link : " + shortLink.toString();

                            shareLink(activity, "Share Article", msg, msgHtml);
                        } else {
                            Log.d("TASK_EXCEPTION", task.getException().toString());
                            Toast.makeText(activity, "Article link could not be generated please try again!", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    	    }
	    
	    public void shareLink(Activity activity, String subject, String msg, String msgHtml) {
		Intent sharingIntent = new Intent(Intent.ACTION_SEND);
		sharingIntent.setType("text/plain");
		sharingIntent.putExtra(Intent.EXTRA_TEXT, msg);
		sharingIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
		sharingIntent.putExtra(Intent.EXTRA_HTML_TEXT, msgHtml);
		if (sharingIntent.resolveActivity(activity.getPackageManager()) != null) {
		    activity.startActivity(Intent.createChooser(sharingIntent, "Share Article"));
		}

	    }

	4. Handle dynamic link on Splash Screen
	
	    public void CheckDeepLinking() {
		FirebaseDynamicLinks.getInstance()
			.getDynamicLink(getIntent())
			.addOnSuccessListener(this, new OnSuccessListener<PendingDynamicLinkData>() {
			    @Override
			    public void onSuccess(PendingDynamicLinkData pendingDynamicLinkData) {
				// Get deep link from result (may be null if no link is found)
				Uri deepLink = null;
				if (pendingDynamicLinkData != null) {
				    deepLink = pendingDynamicLinkData.getLink();
				}
				if (deepLink != null) {

				    article_id = deepLink.getQueryParameter("postId");
				    SharedPrefManager.getInstance(SplashActivity.this).putString(Constant.STR_ARTICLE_ID, article_id);

				    if (deepLink.getBooleanQueryParameter(Constant.STR_ARTICLE_ID, false)) {
				       /* article_id= deepLink.getQueryParameter(Constant.STR_ARTICLE_ID);*/
				    }else{

				    }
				}
			    }
			});
	    }
	    
  ****************************************************************************************************
	create new thread
  ****************************************************************************************************
  
  	new Handler().postDelayed(new Runnable() {
                @Override
                public void run() {
                    
                }
            }, 2000);
	    
	    
	someActivity.runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    //Your code to run in GUI thread here
                }
            });

  
  ****************************************************************************************************
	Add pagination to RecyclerView
  ****************************************************************************************************
  
  1. initialize variables
  
    private boolean loading;
    private int pageSize;
    private int limit= 20;
    private int mPage=1;
    private LinearLayoutManager customLinearLayoutManager = new LinearLayoutManager(activity);;
    
  2. Set scroll listener to rectclerview
  
     RecyclerView.OnScrollListener onScrollListener = new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                if (newState == RecyclerView.SCROLL_STATE_IDLE){
                    int position = getCurrentItem();
                    onPageChanged(position);
                }
            }

            @Override
            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                if (dy > 0) //check for scroll down
                {
                    int visibleItemCount = customLinearLayoutManager.getChildCount();
                    int totalItemCount = customLinearLayoutManager.getItemCount();
                    int firstVisibleItemPosition = customLinearLayoutManager.findFirstVisibleItemPosition();

                    if (loading) {
                        if ((visibleItemCount + firstVisibleItemPosition) >= totalItemCount
                                && firstVisibleItemPosition >= 0
                                && totalItemCount >= pageSize) {
                            loading = false;
                            ++mPage;

                            //Do pagination.. i.e. fetch more articles

                            if (Helper.isNetworkConnected(activity)) {
                                getArticles(SharedPrefManager.getInstance(activity).getString(Constant.STR_ID), String.valueOf(mPage), String.valueOf(limit), true);
                            } else {
                                Toast.makeText(activity, "Check Internet Connection", Toast.LENGTH_SHORT).show();
                            }

                        }
                    }
                }
            }
        };

  	rvArticle.addOnScrollListener(onScrollListener);
	
    3. Call below function to fetch data from API
    
        public void getArticles(String user_id, String page, String limit, boolean status) {
		if (Helper.isNetworkConnected(getActivity())) {
		    showProgress();

		    WebInterface Service = AppController.getRetrofitInstance().create(WebInterface.class);
		    Call<ArticleResponse> call = Service.get_article(user_id, page, limit, Constant.TYPE_HOME);
		    call.enqueue(new Callback<ArticleResponse>() {
			@Override
			public void onResponse(Call<ArticleResponse> call, Response<ArticleResponse> response) {
			    layout_refresh.setVisibility(View.GONE);
			    hideProgress();
			    if (response.body() != null) {
				ArticleResponse result = response.body();
				if (result.getStatus()) {

				    if(status){
					articleArrayList.addAll(result.getResult().getArticles());
					loading = !(result.getResult().getArticles().size() == 0);
				    }else{
					setInitialState();
					if (articleArrayList != null && articleArrayList.size() != 0) {
					    articleArrayList.clear();
					}
					articleArrayList.addAll(result.getResult().getArticles());
				    }
				    articleAdapter.notifyDataSetChanged();

				} else {
				    Toast.makeText(getActivity(), result.getMessage(), Toast.LENGTH_SHORT).show();
				}
			    }
			}

			@Override
			public void onFailure(Call<ArticleResponse> call, Throwable t) {
			    hideProgress();
			    layout_refresh.setVisibility(View.VISIBLE);
			    Toast.makeText(activity, "Something Went Wrong, Try Again", Toast.LENGTH_SHORT).show();

			}
		    });
		}
	    }

  
      public void setInitialState() {
        mPage = 1;
        loading = true;
        pageSize = articleArrayList.size();
    }

****************************************************************************************************
	Get Firebase Device Token forcefully
****************************************************************************************************
  
FirebaseInstanceId.getInstance().getInstanceId().addOnSuccessListener( SplashActivity.this,  new OnSuccessListener<InstanceIdResult>() {
            @Override
            public void onSuccess(InstanceIdResult instanceIdResult) {
                String mToken = instanceIdResult.getToken();
                Log.e("Token",mToken);
              }
        });

****************************************************************************************************
	Horizontal flowing progress bar
****************************************************************************************************
	https://github.com/castorflex/SmoothProgressBar
	
	compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
	
	<fr.castorflex.android.smoothprogressbar.SmoothProgressBar
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	    android:layout_width="match_parent"
	    android:layout_height="wrap_content"
	    android:indeterminate="true"
	    app:spb_sections_count="4"
	    app:spb_color="#FF0000"
	    app:spb_speed="2.0"
	    app:spb_stroke_width="4dp"
	    app:spb_stroke_separator_length="4dp"
	    app:spb_reversed="false"
	    app:spb_mirror_mode="false"
	    app:spb_progressiveStart_activated="true"
	    app:spb_progressiveStart_speed="1.5"
	    app:spb_progressiveStop_speed="3.4"
	    />
	    
****************************************************************************************************
	Check if device support fingerprint sensor
****************************************************************************************************
	    
	_fingerprintManager = (FingerprintManager) _context.getSystemService(FINGERPRINT_SERVICE);

	public boolean fingerprintEnabled()
	{
	    if (!_fingerprintManager.isHardwareDetected())
	    {
		// Device doesn't support fingerprint authentication
		return false;
	    }
	    else if (ActivityCompat.checkSelfPermission(_context, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED)
	    {
		return false;
	    }
	    else if (!_keyguardManager.isKeyguardSecure())
	    {
		return false;
	    }
	    else if (!_fingerprintManager.hasEnrolledFingerprints())
	    {
		// User hasn't enrolled any fingerprints to authenticate with
		return false;
	    }
	    else
	    {
		// Everything is ready for fingerprint authentication
		return true;
	    }
	}
